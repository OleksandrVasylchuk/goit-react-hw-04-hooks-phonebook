{"version":3,"sources":["Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","Components/Section/Section.styled.js","Components/Section/Section.jsx","App.jsx","index.js"],"names":["Forma","styled","form","Input","input","Label","label","Button","button","span","ContactForm","onSubmit","useState","name","setName","number","setNumber","resetName","resetNumber","event","preventDefault","type","value","placeholder","onChange","currentTarget","pattern","maxLength","TextContacts","List","ul","Item","li","Btn","ContactList","contacts","onDeleteContact","map","id","size","onClick","propTypes","PropTypes","func","isRequired","InputFilter","LabelFilter","Filter","Container","div","Section","children","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","item","uuid","includeName","reduce","acc","contact","includeNumber","includes","alert","normalizedFilter","toLowerCase","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd932810.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  border-radius: 3px;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  padding: 3px;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const Button = styled.button`\n  width: max-content;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 30px;\n  cursor: pointer;\n  padding: 10px 15px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  color: rgb(29, 126, 0);\n  background-color: rgb(141, 190, 212);\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\n  &:hover {\n    background-color: rgb(177 117 250);\n    color: #fff;\n    transform: scale(1.05);\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const Error = styled.span`\n  top: 100px;\n  bottom: 0px;\n  color: coral;\n  margin-bottom: 10px;\n  font-size: 10px;\n  font-weight: 400;\n`;\n","import { useState } from 'react';\r\nimport { MdPerson } from \"react-icons/md\";\r\nimport { MdStayPrimaryPortrait } from \"react-icons/md\";\r\nimport {Forma, Input, Label, Button} from './ContactForm.styled'\r\n\r\n\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChangeName = event => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n\r\n  const handleChangeNumber = event => {\r\n    setNumber(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    resetName();\r\n    resetNumber();\r\n  };\r\n\r\n  const resetName = () => {\r\n    setName('');\r\n  };\r\n\r\n  const resetNumber = () => {\r\n    setNumber('');\r\n  };\r\n\r\n\r\n    return (\r\n      <Forma onSubmit={handleSubmit}>\r\n        <Label >\r\n          <MdPerson></MdPerson>\r\n          Name\r\n          <Input\r\n            \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Oleksandr Vasylchuk\"\r\n            onChange={handleChangeName}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            maxLength=\"33\"\r\n          />\r\n        </Label>\r\n\r\n        <Label >\r\n          <MdStayPrimaryPortrait></MdStayPrimaryPortrait>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"000-00-00\"\r\n            onChange={handleChangeNumber}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            maxLength=\"20\"\r\n          />\r\n        </Label>\r\n        <Button  type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </Forma>\r\n    );\r\n  \r\n}\r\n","import styled from \"@emotion/styled\";\n\nexport const TextContacts = styled.span`\n  max-width: 225px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  & svg {\n    margin-right: 10px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Btn = styled.button`\n  margin-left: 20px;\n  cursor: pointer;\n  padding: 5px 5px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\n\n  &:hover {\n    background-color: #7a1212;\n    color: #fff;\n    transform: scale(1.05);\n    border: none;\n    outline: none;\n  }\n`;\n","import PropTypes from 'prop-types'\r\nimport { FiPhone } from 'react-icons/fi';\r\nimport { List, Item, Btn, TextContacts } from './ContactList.styled'\r\n\r\nexport default function ContactList({contacts, onDeleteContact}) {\r\n    return (\r\n        <List>\r\n            {contacts.map(({ name, number, id }) =>\r\n                \r\n                <Item key={id}>\r\n                    <TextContacts>\r\n                    <FiPhone size=\"15\" />\r\n                    {name}: {number}\r\n                    </TextContacts>\r\n                    <Btn\r\n                        type=\"button\"\r\n                        onClick={()=>onDeleteContact(id)}>\r\n                        Delete\r\n                    </Btn>\r\n            </Item>\r\n            )}\r\n\r\n        </List>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nBtn.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\n\nexport const InputFilter = styled.input`\n  height: 25px;\n  border-radius: 3px;\n  margin-top: 10px;\n  border: none;\n  outline: none;\n  margin-bottom: 20px;\n \n  }\n  padding: 3px;\n`;\n\nexport const LabelFilter = styled.label`\n  font-style: italic;\n  color: rgb(245, 229, 139);\n  font-size: 18px;\n  font-weight: 600;\n  & svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Icon = styled.span``;\n","import PropTypes from 'prop-types'\r\nimport { VscSearch } from \"react-icons/vsc\";\r\nimport { InputFilter, LabelFilter } from './Filter.styled'\r\n\r\nexport default function Filter({value, onChange}) {\r\n    return (\r\n        <LabelFilter>\r\n            <VscSearch></VscSearch>\r\n            Find contacts by name\r\n            <InputFilter\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder=\"Rosie Simpson\"\r\n            />\r\n           \r\n            \r\n        </LabelFilter>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 350px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px 20px;\n  background-image: url(https://sdelatlending.ru/wp-content/themes/xmarkup/img/old-wall.png);\n  background-color: rgb(39, 39, 110);\n  border: 2mm ridge rgba(170, 50, 220, 0.6);\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.55);\n  border-radius: 15px;\n`;\n","import PropTypes from 'prop-types'\r\nimport {Container} from './Section.styled'\r\n\r\nexport default function Section({ children }) {\r\n    return <Container>{ children}</Container>\r\n\r\n}\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuid } from 'uuid';\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Section from \"./Components/Section/Section\";\n\nfunction useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\n\nexport default function App() {\n \n \n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const item = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    const includeName = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const includeNumber = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields!');\n      return;\n    }\n\n    if (includeName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else if (includeNumber.includes(number)) {\n      alert(`${number} is already in contacts`);\n    } else {\n      setContacts(contacts => [item, ...contacts]);\n    }\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  \n    return (\n      <>\n       <Section>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onSubmit={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={getVisibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n      </>\n    );\n  \n  \n}\n\n\n\n\n\n// class App extends Component {\n \n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//     name: '',\n//     number: '',\n//   };\n\n//    componentDidMount() {\n//     const contact = localStorage.getItem('contacts');\n//     const parsedContact = JSON.parse(contact);\n\n//     if (parsedContact) {\n//       this.setState({ contacts: parsedContact });\n//     }\n//   }\n\n//   componentDidUpdate( prevState) {\n//     const contact = JSON.stringify(this.state.contacts);\n//     if (contact !== prevState.contacts) {\n//       localStorage.setItem('contacts', contact);\n//     }\n//   }\n  \n//   addContact = (name, number) => {\n//     const item = {\n//        id : uuid(),\n//       name,\n//       number,\n//     }\n//      const includeName = this.state.contacts.reduce(\n//       (acc, contact) => [...acc, contact.name],\n//       [],\n//       );\n//      const includeNumber = this.state.contacts.reduce(\n//       (acc, contact) => [...acc, contact.number],\n//       [],\n//       );\n\n \n  \n//       if(name === '' || number === '') {\n//       alert('Please enter all fields!');\n//       return;\n//       }\n\n//         if (includeName.includes(name)) {\n//                 alert(`${name} is already in contacts`);\n//               return;\n//         } else if (includeNumber.includes(number)){\n//           alert(`${number} is already in contacts`);\n//               return;\n//         } else {\n//           this.setState(({ contacts }) => ({\n//                 contacts: [item, ...contacts],\n//           }));\n//         }\n//   }\n  \n  \n//  changeFilter = event => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n\n//   render() {\n   \n//     const { contacts, filter } = this.state;\n//     const visibleContacts = this.getVisibleContacts();\n//     return (\n//       <>\n//        <Section>\n//         <h1>Phonebook</h1>\n//         <ContactForm contacts={contacts} onSubmit={this.addContact} />\n\n//         <h2>Contacts</h2>\n//         <Filter value={filter} onChange={this.changeFilter} />\n//         <ContactList\n//           contacts={visibleContacts}\n//           onDeleteContact={this.deleteContact}\n//         />\n//       </Section>\n//       </>\n//     );\n//   }\n  \n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}